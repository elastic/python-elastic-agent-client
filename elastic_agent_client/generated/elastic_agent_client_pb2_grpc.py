# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import elastic_agent_client_deprecated_pb2 as elastic__agent__client__deprecated__pb2
from . import elastic_agent_client_pb2 as elastic__agent__client__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in elastic_agent_client_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ElasticAgentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckinV2 = channel.stream_stream(
                '/proto.ElasticAgent/CheckinV2',
                request_serializer=elastic__agent__client__pb2.CheckinObserved.SerializeToString,
                response_deserializer=elastic__agent__client__pb2.CheckinExpected.FromString,
                _registered_method=True)
        self.Actions = channel.stream_stream(
                '/proto.ElasticAgent/Actions',
                request_serializer=elastic__agent__client__pb2.ActionResponse.SerializeToString,
                response_deserializer=elastic__agent__client__pb2.ActionRequest.FromString,
                _registered_method=True)
        self.Checkin = channel.stream_stream(
                '/proto.ElasticAgent/Checkin',
                request_serializer=elastic__agent__client__deprecated__pb2.StateObserved.SerializeToString,
                response_deserializer=elastic__agent__client__deprecated__pb2.StateExpected.FromString,
                _registered_method=True)


class ElasticAgentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckinV2(self, request_iterator, context):
        """Called by the client to provide the Elastic Agent the state of the application over the V2
        protocol.

        Implements a reconciliation loop where a component periodically tells the agent what its
        current observed configuration is, and the agent replies with the configuration it is
        expected to be running.

        Each configuration block included in the expected message is accompanied by an index or
        revision number. Corresponding observed messages do not need to waste CPU copying the entire
        applied configuration back to the agent on each checkin; instead, they can simply echo back
        the index or revision number from the expected message upon successful reconciliation.
        Configurations in large deployments can be 1MB or more.

        A `CheckinObserved` must be streamed at least every 30 seconds or it will result in the set
        of units automatically marked as FAILED. After several missed checkins the Elastic Agent will
        force kill the entire process and restart it.

        The V2 protocol is designed to operate knowing as little as possible about the units and
        components it communicates with. Each unit or component can accept arbitrary user
        configuration from the agent policy which is encoded in a `google.protobuf.Struct source`
        field. The agent does not fully parse or inspect the contents of the source field and
        passes it through to components unmodified.

        Use of the source field allows the input configurations to evolve without needing to modify
        the control protocol itself. In some cases commonly used or important fields are extracted as
        a dedicated message type, but these definitions do not completely define the contents of the
        source field which is free to contain additional fields.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Actions(self, request_iterator, context):
        """Called by the client after receiving connection info to allow the Elastic Agent to stream action
        requests to the application and the application stream back responses to those requests.

        Request and response is swapped here because the Elastic Agent sends the requests in a stream
        to the connected process. The order of response from the process does not matter, it is acceptable
        for the response order to be different then the request order.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Checkin(self, request_iterator, context):
        """DEPRECATED: DO NOT USE

        Called by the client to provide the Elastic Agent the state of the application.

        A `StateObserved` must be streamed at least every 30 seconds or it will result in the
        application be automatically marked as FAILED, and after 60 seconds the Elastic Agent will
        force kill the entire process and restart it.

        Messages definitions are preserved in elastic-agent-client-deprecated.proto.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ElasticAgentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckinV2': grpc.stream_stream_rpc_method_handler(
                    servicer.CheckinV2,
                    request_deserializer=elastic__agent__client__pb2.CheckinObserved.FromString,
                    response_serializer=elastic__agent__client__pb2.CheckinExpected.SerializeToString,
            ),
            'Actions': grpc.stream_stream_rpc_method_handler(
                    servicer.Actions,
                    request_deserializer=elastic__agent__client__pb2.ActionResponse.FromString,
                    response_serializer=elastic__agent__client__pb2.ActionRequest.SerializeToString,
            ),
            'Checkin': grpc.stream_stream_rpc_method_handler(
                    servicer.Checkin,
                    request_deserializer=elastic__agent__client__deprecated__pb2.StateObserved.FromString,
                    response_serializer=elastic__agent__client__deprecated__pb2.StateExpected.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.ElasticAgent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('proto.ElasticAgent', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ElasticAgent(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckinV2(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/proto.ElasticAgent/CheckinV2',
            elastic__agent__client__pb2.CheckinObserved.SerializeToString,
            elastic__agent__client__pb2.CheckinExpected.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Actions(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/proto.ElasticAgent/Actions',
            elastic__agent__client__pb2.ActionResponse.SerializeToString,
            elastic__agent__client__pb2.ActionRequest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Checkin(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/proto.ElasticAgent/Checkin',
            elastic__agent__client__deprecated__pb2.StateObserved.SerializeToString,
            elastic__agent__client__deprecated__pb2.StateExpected.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
